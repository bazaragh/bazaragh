{% extends "base.jinja" %}

{% block style %}
    <link rel="stylesheet" href="{{ url_for('static', filename='styles/user-profile.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='styles/chat.css') }}">
{% endblock %}

{% block content %}
    <main class="profile-container">
        <section class="side-chat shadow">
            <h3 class="chat-header">Wiadomości</h3>
            {% for t in threads %}
                <a id="thread-{{ t['user_id'] }}" href="{{ url_for('bp_chat.user_chat_list', user_id=t['user_id']) }}"
                   class="chat-topic-wrapper shadow">
                    <b>{{ t['user'] }}</b><br>
                    <small class="preview">{{ t['preview'] }}</small>
                </a>
            {% endfor %}
        </section>
        <section class="main-content">
            {% if messages is not none %}
                <div id="messages">
                    {% for m in messages %}
                        <div class="{{ 'msg my-msg' if m['author'] == current_user.id else 'msg' }}">
                            <div>
                                {{ m['content'] }}
                            </div>
                        </div>
                    {% endfor %}
                </div>
                <div class="input-panel">
                    <!--suppress HtmlFormInputWithoutLabel -->
                    <input id="message-box" placeholder="Wpisz wiadomość">
                    <div class="send" onclick="sendMessage()">
                        <span class="material-symbols-outlined">send</span>
                    </div>
                </div>

                <script>
                    function showLatest() {
                        let messages = $('#messages');
                        messages.scrollTop(messages[0].scrollHeight);
                    }

                    function sendMessage() {
                        fetch('{{ url_for('bp_api.api_message') }}', {
                            'method': 'POST',
                            'headers': {
                                'Content-Type': 'application/json'
                            },
                            'body': JSON.stringify({
                                'recipient': '{{ recipient }}',
                                'content': $('#message-box').val()
                            })
                        }).then((data) => {
                            let input = $('#message-box');
                            let content = input.val();
                            $('#messages').append(`<div class="msg my-msg"><div>${content}</div></div>`);
                            input.val('');
                            showLatest(content);

                            let thread = $('#thread-{{ recipient_id }}');
                            let threadList = thread.parent();
                            thread.remove();
                            thread.children('small').text(content.substring(0, 32));
                            threadList.prepend(thread);
                        }).catch((e) => {
                            console.error(e.statusText);
                        })
                    }

                    function subscribe() {
                        let socket = io()
                        socket.on('{{ current_user.fs_uniquifier }}', (data) => {
                            if (`${data.from}` === '{{ recipient_id }}') {
                                $('#messages').append(`<div class="msg"><div>${data.content}</div></div>`);
                                showLatest();
                            }

                            let thread = $(`#thread-${data.from}`);
                            let threadList = thread.parent();
                            thread.remove();
                            thread.children('small').text(data.content.substring(0, 32));
                            threadList.prepend(thread);
                        })
                    }

                    subscribe();
                    showLatest();
                    $('#message-box').on('keydown', (e) => {
                        if (e.key === 'Enter') sendMessage();
                    })
                </script>
            {% endif %}
        </section>
    </main>
{% endblock %}