{% extends "base.jinja" %}

{% block style %}
    <link rel="stylesheet" href="{{ url_for('static', filename='styles/user-profile.css') }}">
    <style>
        .dropdown-item-custom {
            overflow: hidden;
            text-overflow: ellipsis;
            width: 100%;
        }

        .preview {
            white-space: nowrap;
        }

        .msg > div {
            background: white;
            border: 1px solid #064635;
            padding: 1em;
            margin: 1em 0;
            display: inline-block;
        }

        .my-msg {
            text-align: right;
        }

        .my-msg > div {
            background: #064635;
            color: white;
        }

        .input-panel {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-top: 2em;
            border-top: 1px solid #064635;
            padding-top: 2em;
        }

        .input-panel > input {
            width: 100%;
            height: 2em;
            border: 1px solid #064635;
            border-radius: 0;
            padding-left: 1em;
            padding-right: 1em;
        }

        .input-panel > input:focus {
            outline: 1px solid #064635;
        }

        .send {
            display: inline-flex;
            background: #064635;
            border: 1px solid #064635;
            color: white;
            align-items: center;
            justify-content: center;
            width: 2em;
            height: 2em;
            margin-left: 5px;
            cursor: pointer;
        }

        #messages {
            max-height: 40vh;
            overflow-y: scroll;
        }
    </style>
{% endblock %}

{% block content %}
    <main class="profile-container">
        <section class="side-navbar-custom shadow">
            {% for t in threads %}
                <a id="thread-{{ t['user_id'] }}" href="{{ url_for('bp_chat.user_chat_list', user_id=t['user_id']) }}"
                   class="dropdown-item-custom">
                    <b>{{ t['user'] }}</b><br>
                    <small class="preview">{{ t['preview'] }}</small>
                </a>
            {% endfor %}
        </section>
        <section class="main-content">
            {% if messages is not none %}
                <div id="messages">
                    {% for m in messages %}
                        <div class="{{ 'msg my-msg' if m['author'] == current_user.id else 'msg' }}">
                            <div>
                                {{ m['content'] }}
                            </div>
                        </div>
                    {% endfor %}
                </div>
                <div class="input-panel">
                    <!--suppress HtmlFormInputWithoutLabel -->
                    <input id="message-box" placeholder="Wpisz wiadomość">
                    <div class="send" onclick="sendMessage()">
                        <span class="material-symbols-outlined">send</span>
                    </div>
                </div>

                <script>
                    function showLatest() {
                        let messages = $('#messages');
                        messages.scrollTop(messages[0].scrollHeight);
                    }

                    function sendMessage() {
                        fetch('{{ url_for('bp_api.api_message') }}', {
                            'method': 'POST',
                            'headers': {
                                'Content-Type': 'application/json'
                            },
                            'body': JSON.stringify({
                                'recipient': '{{ recipient }}',
                                'content': $('#message-box').val()
                            })
                        }).then(res => {
                            if (!res.ok) return;

                            let input = $('#message-box');
                            let content = input.val();
                            $('#messages').append(`<div class="msg my-msg"><div>${content}</div></div>`);
                            input.val('');
                            showLatest(content);

                            let thread = $('#thread-{{ recipient_id }}');
                            let threadList = thread.parent();
                            thread.remove();
                            thread.children('small').text(content.substring(0, 32));
                            threadList.prepend(thread);
                        }).catch(e => { console.error(e.message); })
                    }

                    function subscribe() {
                        let socket = io()
                        socket.on('{{ current_user.fs_uniquifier }}', (data) => {
                            if (`${data.from}` === '{{ recipient_id }}') {
                                $('#messages').append(`<div class="msg"><div>${data.content}</div></div>`);
                                showLatest();
                            }

                            let thread = $(`#thread-${data.from}`);
                            let threadList = thread.parent();
                            thread.remove();
                            thread.children('small').text(data.content.substring(0, 32));
                            threadList.prepend(thread);
                        })
                    }

                    subscribe();
                    showLatest();
                    $('#message-box').on('keydown', (e) => {
                        if (e.key === 'Enter') sendMessage();
                    })
                </script>
            {% endif %}
        </section>
    </main>
{% endblock %}